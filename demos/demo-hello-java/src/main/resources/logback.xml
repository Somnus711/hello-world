<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="60 seconds" debug="false">

  <contextName>hello-world</contextName>
  <property resource="logback.properties" />

  <!-- 标准控制台输出 console log -->   
  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <encoder>
       <pattern>${log.pattern}</pattern>
    </encoder>
  </appender>

  <!-- 按照每天生成日志文件 -->
  <appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <!--日志文件输出的文件名-->
      <fileNamePattern>${log.dir}helloworld_error.log.%d{yyyy-MM-dd}</fileNamePattern>
      <!--日志文件保留天数-->
      <maxHistory>30</maxHistory>
    </rollingPolicy>
    <encoder>
      <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
      <pattern>${log.pattern}</pattern>
    </encoder>
    <!--日志文件最大的大小-->
    <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
      <MaxFileSize>10MB</MaxFileSize>
    </triggeringPolicy>
  </appender>

  <!-- 异步记录日志 helloworld_error.log(WARN, ERROR) -->
  <appender name="ASYNC_ERROR" class="ch.qos.logback.classic.AsyncAppender">
    <!-- 过滤WARN级别以下的日志, 即记录WARN, ERROR级别的log -->
    <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
      <level>WARN</level>
    </filter>
    <appender-ref ref="ERROR" />
    <!-- 缓存日志队列的最大容量,默认为256 -->
    <queueSize>512</queueSize>
    <!-- 默认情况下，当BlockingQueue还有20%容量，他将丢弃TRACE、DEBUG和INFO级别的event，
         只保留WARN和ERROR级别的event。为了保持所有的events，设置该值为0。 -->
    <discardingThreshold>0</discardingThreshold>
  </appender>

  <!-- helloworld_jackson.log -->
  <appender name="JACKSON_STUDY" class="ch.qos.logback.core.rolling.RollingFileAppender">
    <!-- https://logback.qos.ch/codes.html#rfa_no_tp -->
    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
      <fileNamePattern>${log.dir}helloworld_jackson.log.%d{yyyy-MM-dd}</fileNamePattern>
      <maxHistory>30</maxHistory>
    </rollingPolicy>
    <encoder>
      <pattern>${log.pattern}</pattern>
    </encoder>
  </appender>

  <root level="${log.level}">
    <appender-ref ref="STDOUT" />
    <appender-ref ref="ASYNC_ERROR" />
  </root>

  <logger name="xj.love.hj.demo.hello.java.jackson" level="INFO">
    <appender-ref ref="JACKSON_STUDY" />
  </logger>

</configuration>
